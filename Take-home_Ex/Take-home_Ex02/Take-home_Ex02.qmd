---
title: "Take-home_ex02"
date: "January 23, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
editor: visual
---

# 1. Overview

This exercise aims to critique and improved on the visualizations created by peers from Take Home Exercise 1 based on clarity and aesthetics. For each visualization, I will be listing what had worked well, what did not, and what I think would help make it better. Finally, the visualization will be re-made based on my suggestions.

# 2. Data Preparation

First, let us prepare the required data.

## 2.1 Loading R packages

We begin by loading the required R packages.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

pacman::p_load(tidyverse,
               haven,
               dplyr,
               plotly,
               ggrepel, 
               patchwork, 
               ggthemes, 
               hrbrthemes)
```

## 2.2 Importing PISA data set

Similar to exercise 1, the data we are using can be found from the [PISA 2022 Database](https://www.oecd.org/pisa/data/2022database/). The database contains full set of responses from individual students, principals, and parents. In this task, we will only be looking at the students questionnaire data file. In particular, we are only interested in the data of students from Singapore.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

stu_qqq_SG <- read_rds("data/stu_qqq_SG.rds")
```

## 2.3 Data wrangling

We will be using a curated set of variables for our analysis. The variables and their descriptions are listed in the table below.

| Variable      | Description                                                      | Data Type   |
|------------------|-----------------------------------|------------------|
| CNTSCHID      | The unique School's ID                                           | Categorical |
| CNTSTUID      | The unique student's ID                                          | Categorical |
| Math_Score    | Average PV scores for Math                                       | Numerical   |
| Reading_Score | Average PV scores for Reading                                    | Numerical   |
| Science_Score | Average PV scores for Science                                    | Numerical   |
| Total_Score   | Overall average score from the sum of Math, Reading, and Science | Numerical   |
| Gender        | Male or Female                                                   | Numerical   |
| Own_Room      | Whether student has his or her own room                          | Categorical |
| mi-num        | Number of musical instruments at student's home                  | Numerical   |

The following code extracts and integrates them in a new data frame.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

# Create a new dataset PV by extracting relevant variables from stu_qqq_SG
PV <- stu_qqq_SG %>%
  mutate(
    Math_Score = rowMeans(select(., contains("PV")&contains("MATH")), na.rm = TRUE),
    Reading_Score = rowMeans(select(., contains("PV")&contains("READ")), na.rm = TRUE),
    Science_Score = rowMeans(select(., contains("PV")&contains("SCIE")), na.rm = TRUE),
    Total_Score = Math_Score + Reading_Score + Science_Score,
    Average_Score = Total_Score / 3,
    Gender = ifelse(ST004D01T == 1,  "Female", "Male"),
    Own_Room = ifelse(ST250Q01JA == 1, "Yes" , "No"),
    mi_num = ST251Q06JA
  ) %>%
  select(CNTSCHID, CNTSTUID, Math_Score, Reading_Score, Science_Score, Total_Score, Average_Score, Gender, Own_Room, mi_num)
```

Another data set is created for schools. The following code calculates the maths, reading, and science, as well as the average grades in these three subjects for each schoolâ€™s students.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

School_Avg_Scores <- PV %>%
  group_by(CNTSCHID) %>%
  summarize(
    Avg_Math_Score = mean(Math_Score, na.rm = TRUE),
    Avg_Reading_Score = mean(Reading_Score, na.rm = TRUE),
    Avg_Science_Score = mean(Science_Score, na.rm = TRUE),
    Avg_Score = mean(Total_Score/3, na.rm = TRUE)
  )

School_Avg_Scores_long <- School_Avg_Scores %>%
  select(CNTSCHID, 
         starts_with("Avg_Math"), 
         starts_with("Avg_Reading"), 
         starts_with("Avg_Science"),
         starts_with("Avg_Score")) %>%
  pivot_longer(cols = -CNTSCHID, 
               names_to = "Subject", 
               values_to = "Score")
```

# 3. Visualization Critique and Remake

The exercise I have chosen for the make-over can be found [here](https://isss608cjh.netlify.app/take-home_ex/take-home_ex01/take-home_ex01). In total, there are 5 visualizations.

## 3.1 Distribution of Student Performance

The following code plots histograms of maths, reading, science, and total score scores to observe the distribution of student performance:

```{r}
#| code-fold: true
#| code-summary: "Show the code"

plot1 <- ggplot(data = PV, aes(x = Math_Score)) +
  geom_histogram(bins = 10, boundary = 100, color = "blue", fill = "#3459e6") +
  ggtitle("Distribution of Maths scores")+
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))

plot2 <- ggplot(data = PV, aes(x = Reading_Score)) +
  geom_histogram(bins = 10, boundary = 100, color = "blue", fill = "#3459e6") +
  ggtitle("Distribution of Reading scores")+
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))

plot3 <- ggplot(data = PV, aes(x = Science_Score)) +
  geom_histogram(bins = 10, boundary = 100, color = "blue", fill = "#3459e6") +
  ggtitle("Distribution of Science scores")+
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))

plot4 <- ggplot(data = PV, aes(x = Total_Score)) +
  geom_histogram(bins = 10, boundary = 100, color = "blue", fill = "#3459e6") +
  ggtitle("Distribution of Total scores")+
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))

plot1 + plot2 + plot3 + plot4
```

### 3.1.1 Pros and Cons

**Clarity**

-   Histograms are not able to show the distribution of continuous variables well. Instead, a boxplot or density plot would be more suitable.

-   Axes limits are not aligned and can be misleading, especially for the charts showing Math, Reading, and Science scores.

-   The plot layout of 2x2 is not ideal. I would use a layout where easy comparison can be made for Math, Reading, and Science.

-   On the same point, I would opt not to show Total Scores as it is on a different scale as compared to the other 3 plots. Rather, I would use Average Scores to give a summary of all 3 scores together.

**Aesthetics**

-   Soft grid lines are not distracting

-   the "\_" in the y-axis label appears unprofessional

-   The colour choice is neat and simple. It is however, too striking for a fill colour. A lighter shade would be more pleasant to the eyes while using striking colours to highlight points of attention.

-   The repetition of "Distribution" in each chart's title is unnecessary, and can be mentioned once in the plot title instead

### 3.1.2 Sketch

![](Sketch 1.png){fig-align="center"}

**Clarity**

-   Changed the layout with a boxplot that shows Average Scores at the top that gives a summary of all 3 subjects, and a density plot to show the breakdown of these subjects together for easier comparison

-   x-axis limits are aligned for both top and bottom charts

-   Lines have been added to visualize the means of all 3 subjects. Their corresponding points have also been plotted on the boxplot

-   Annotations are added to highlight the mean numbers

**Aesthetics**

-   Soft grid lines are removed to prevent confusion with the boxplot

-   Plot title and axis labels have been replaced to give a clearer picture of what the variables are

-   Transparency is added to the fill colour to tone down the glare. Its non-transparent colours are used for the lines, points, and annotation to highlight the points of focus

-   bold axis titles for inking effect

### 3.1.3 Make-over

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| warning: false

temp <- PV[, c("CNTSTUID", "Math_Score", "Reading_Score", "Science_Score")] %>% gather(key = "Subject", value = "Scores", Math_Score, Reading_Score, Science_Score)

p11 <- ggplot(data = temp, aes(x = Scores, fill = Subject)) +
  geom_density(alpha = 0.3) +
  xlab("Math, Reading, and Science Scores") +
  ylab("Student\nDensity") +
  xlim(200, 900) + 
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold")) + 
  geom_vline(xintercept = mean(PV$Math_Score),
             colour = "red",
             linetype = "dashed") +
  geom_vline(xintercept = mean(PV$Reading_Score),
             colour = "lawngreen",
             linetype = "dashed") +
  geom_vline(xintercept = mean(PV$Science_Score),
             colour = "blue",
             linetype = "dashed") +
  annotate(
    geom = "text", 
    x = 800, 
    y = 0.004,
    label = paste0("Math Mean: ", round(mean(PV$Math_Score),2)),
    color = "red",
    fontface = 2,
    size = 3
  ) +
  annotate(
    geom = "text", 
    x = 800, 
    y = 0.003,
    label = paste0("Reading Mean: ", round(mean(PV$Reading_Score),2)),
    color = "lawngreen",
    fontface = 2,
    size = 3
  ) +
  annotate(
    geom = "text", 
    x = 800, 
    y = 0.0035,
    label = paste0("Science Mean: ", round(mean(PV$Science_Score),2)),
    color = "blue",
    fontface = 2,
    size = 3
  ) +
  scale_y_continuous(labels = scales::percent)

p12 <- ggplot(data = PV, aes(y = Average_Score)) +
  geom_boxplot(fill = "lightgray") +
  geom_point(aes(x = 0 ,y = mean(Math_Score)),
             colour = "red",
             size = 2) +
  geom_point(aes(x = 0 ,y = mean(Reading_Score)),
             colour = "lawngreen",
             size = 2) +
  geom_point(aes(x = 0 ,y = mean(Science_Score)),
             colour = "blue",
             size = 2) +
  coord_flip() +
  ylim(200, 900) + 
  xlab("Average\nScores") +
  ylab(element_blank()) +
  theme_minimal() +
  theme(text = element_text(size = 8),
        axis.text.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.y = element_text(face = "bold"))

p1 <- p12 / p11

p1 <- p1 + 
  plot_layout(axes="collect",
              heights = c(1,5)) + 
  plot_annotation(
    title = "Distribution of Students' Scores"
  )

p1
```

## 3.2 Student Performance by Gender

The following code generates density plots to compare the distribution of academic performance between students of different genders, providing a comprehensive understanding of the gender differences in academic achievement.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

plot1 <- ggplot(data = PV, aes(x = Math_Score, fill = Gender)) +
  geom_density(alpha = 0.7, position = "identity", stat = "density") +  
   scale_fill_manual(values = c("Female" = "#FF5733", "Male" = "#3459e6")) +
  labs(title = "Math Scores by Gender") +
  theme(legend.position = "none") +
  scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
  theme(text = element_text(size = 8), plot.title = element_text(hjust = 0.5))

plot2 <- ggplot(data = PV, aes(x = Reading_Score, fill = Gender)) +
  geom_density(alpha = 0.7, position = "identity", stat = "Density") +
  scale_fill_manual(values = c("Female" = "#FF5733", "Male" = "#3459e6")) +
  labs(title = "Reading Scores by Gender") +
  theme(legend.position = "none") +
  scale_y_continuous(labels = scales::percent)+
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))

plot3 <- ggplot(data = PV, aes(x = Science_Score, fill = Gender)) +
  geom_density(alpha = 0.7, position = "identity", stat = "Density") +
  scale_fill_manual(values = c("Female" = "#FF5733", "Male" = "#3459e6")) +
  labs(title = "Science Scores by Gender") +
  theme(legend.position = "none") +
  scale_y_continuous(labels = scales::percent)+
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))

plot4 <- ggplot(data = PV, aes(x = Total_Score, fill = Gender)) +
  geom_density(alpha = 0.7, position = "identity", stat = "density") +
  scale_fill_manual(values = c("Female" = "#FF5733", "Male" = "#3459e6")) +
  labs(title = "Total Scores by Gender") + 
  scale_y_continuous(labels = scales::percent)+
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))

combined_plots <- plot1 + plot2 + plot3 + plot4 +
  plot_layout(guides = "collect")

combined_plots
```

### 3.2.1 Pros and Cons

**Clarity**

-   Axes limits are not aligned and can be misleading, especially for the charts showing Math, Reading, and Science scores.

-   The plot layout of 2x2 is not ideal. I would use a layout where easy comparison can be made for Math, Reading, and Science.

-   Similarly, I would opt not to show Total Scores as it is on a different scale as compared to the other 3 plots. Rather, I would use Average Scores to give a summary of all 3 scores together.

**Aesthetics**

-   Soft grid lines are not distracting

-   the "\_" in the y-axis label appears unprofessional

-   The colour choice is simple and shows the contrast between the 2 genders clearly

-   The repetition of "Scores by Gender" in each chart's title is unnecessary, and can be mentioned once in the plot title instead

### 3.2.2 Sketch

![](Sketch 2.png){fig-align="center"}

**Clarity**

-   Changed the layout with a density that shows Average Scores by gender at the top that gives a summary of all 3 subjects, and 3 box plots to show the breakdown of these subjects by gender for easier comparison

-   x and y-axis limits are aligned for both top and bottom charts

**Aesthetics**

-   Soft grid lines are removed to prevent confusion with the boxplot

-   Plot title and axis labels have been replaced to give a clearer picture of what the variables are

-   Transparency is added to the fill colour to tone down the glare

-   Bold axis labels and titles

### 3.2.3 Make-over

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| warning: false

p21 <- ggplot(data = PV, aes(x = Gender, y = Math_Score, fill = Gender)) +
  geom_boxplot(alpha = 0.3, show.legend = FALSE) +
  xlab("Math") +
  ylab("Scores") +
  ylim(200, 800) +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_text(face = "bold", size = 8),
        axis.title.y = element_text(face = "bold")) +
  scale_fill_manual(values = c("Female" = "red", "Male" = "blue"))

p22 <- ggplot(data = PV, aes(x = Gender, y = Reading_Score, fill = Gender)) +
  geom_boxplot(alpha = 0.3, show.legend = FALSE) +
  xlab("Reading") +
  ylab("Scores") +
  ylim(200, 800) +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_text(face = "bold", size = 8),
        axis.title.y = element_text(face = "bold")) +
  scale_fill_manual(values = c("Female" = "red", "Male" = "blue"))

p23 <- ggplot(data = PV, aes(x = Gender, y = Science_Score, fill = Gender)) +
  geom_boxplot(alpha = 0.3, show.legend = FALSE) +
  xlab("Science") +
  ylab("Scores") +
  ylim(200, 800) +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_text(face = "bold", size = 8),
        axis.title.y = element_text(face = "bold")) +
  scale_fill_manual(values = c("Female" = "red", "Male" = "blue"))

p24 <- ggplot(data = PV, aes(x = Average_Score, fill = Gender)) +
  geom_density(alpha = 0.3) +
  labs(title = "Average Scores") +
  xlab(element_blank()) +
  xlim(200,800) +
  ylab("Density") +
  scale_fill_manual(values = c("Female" = "red", "Male" = "blue")) +
  scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face = "bold"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.position = "right",
        axis.title.y = element_text(face = "bold"))

p2 <- p24 / (p21 + p22 + p23 + plot_layout(axes = "collect"))

p2 <- p2 + plot_layout(guides = "collect",
                       heights = c(1,3)) + 
  plot_annotation(
    title = "Distribution of Students' Scores by Gender"
  )

p2
```

## 3.3 Student Performance by School

The following code draws box plots showing the distribution of school average scores in each subject, with text labels identifying the four highest-scoring schools and the two lowest-scoring schools in each subject.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

outliers_data <- School_Avg_Scores %>%
  pivot_longer(cols = starts_with("Avg_"), names_to = "Subject", values_to = "Score") %>%
  group_by(Subject) %>%
  arrange(Score) %>%
  slice(c(1:2, (n() - 3):(n())))

ggplot(School_Avg_Scores_long, aes(x = Subject, y = Score, fill = Subject)) +
  geom_boxplot(fill = "#3459e6") +
  geom_text_repel(data = outliers_data, aes(label = CNTSCHID), 
                  position = position_dodge(width = 1), 
                  box.padding = 0.8, 
                  force = 1, 
                  segment.color = "grey50", 
                  size = 2) +  # Use ggrepel's geom_text_repel
  labs(title = "Boxplot of Average Scores for Each Subject", x = "", y = "") +
  theme_minimal() +
  theme(text = element_text(size = 10),
        plot.title = element_text(hjust = 0.5))
```

### 3.3.1 Pros and Cons

**Clarity**

-   Lack of y-axis label

-   annotations are cluttered and difficult to read. It seems like the intention was to highlight the best and worst performing schools for Avg_Score, as well as their position on Math, Reading, and Science respectively. In this case, I would only single out one school for best and one school for worst, and use a different colour to highlight their position on each boxplot.

**Aesthetics**

-   Soft grid lines are not distracting

-   the "\_" in the y-axis label appears unprofessional

-   The colour choice is neat and simple

### 3.3.2 Sketch

![](Sketch 3.png){fig-align="center"}

**Clarity**

-   Added y-axis label "Average Scores"

-   Remove annotations for all but the Top and Bottom School. I also only included the school ID only on the boxplot for "Average of three subjects", while highlighting their respective position for each of the different subjects using coloured points. Added a legend for the coloured points as well.

**Aesthetics**

-   Removed the grid lines as there are already axis ticks.

-   Tidied up the x-axis text. Removed the "\_" and "Avg_Score" as these are now shown in the y-axis title.

-   Replaced the fill with lightgray. This helps to provide contrast with the coloured points of the Top and Bottom Schools.

-   Bold axis labels and titles

### 3.3.3 Make-over

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| warning: false

top<- School_Avg_Scores %>%
  pivot_longer(cols = starts_with("Avg_Score"), 
               names_to = "Subject", 
               values_to = "Avg_Score") %>%
  group_by(Subject) %>%
  arrange(Avg_Score) %>%
  slice(c((n()):(n()))) %>% 
  gather(key = "Subject", 
         value = "Score", 
         Avg_Math_Score, 
         Avg_Reading_Score, 
         Avg_Science_Score, 
         Avg_Score)

bottom <- School_Avg_Scores %>%
  pivot_longer(cols = starts_with("Avg_Score"), 
               names_to = "Subject", 
               values_to = "Avg_Score") %>%
  group_by(Subject) %>%
  arrange(Avg_Score) %>%
  slice(c(1:1)) %>% 
  gather(key = "Subject", 
         value = "Score", 
         Avg_Math_Score,
         Avg_Reading_Score, 
         Avg_Science_Score, 
         Avg_Score)

ggplot(School_Avg_Scores_long,
       aes(x = Subject,
           y = Score, 
           fill = Subject)) +
  geom_boxplot(fill = "lightgray") +
  geom_point(data = top, 
             aes(x = Subject, 
                 y = Score, 
                 color = "Top School")) +
  geom_text_repel(data = top[grepl('Avg_Score', top$Subject),],
                  aes(label = CNTSCHID), 
                  box.padding = 0.8,
                  nudge_x = 0.7,
                  nudge_y = 40,
                  force = 1, 
                  color = "blue",
                  size = 3) +
  geom_point(data = bottom, 
             aes(x = Subject, 
                 y = Score, 
                 color = "Bottom School")) +
  geom_text_repel(data = bottom[grepl('Avg_Score', bottom$Subject),],
                  aes(label = CNTSCHID), 
                  box.padding = 0.8,
                  nudge_x = 0.7,
                  nudge_y = -40,
                  force = 1, 
                  color = "red",
                  size = 3) +
  labs(title = "Boxplot of Average Scores for Each Subject", 
       x = "", 
       y = "Average Scores") +
  scale_x_discrete(labels=c("Avg_Math_Score" = "Math",
                            "Avg_Reading_Score" = "Reading",
                            "Avg_Science_Score" = "Science",
                            "Avg_Score" = "Average of\n three Subjects")) +
  theme_minimal() +
  theme(text = element_text(size = 10),
        plot.title = element_text(hjust = 0.5,
                                  face = "bold"),
        axis.title.y = element_text(face = "bold",
                                    size = 8),
        axis.text.x = element_text(face = "bold"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.title = element_blank()) + 
  scale_colour_manual(values = c("Top School" = "blue",
                                 "Bottom School" = "red")) +
  guides(color=guide_legend("colour", reverse = TRUE), fill = "none")

```

## 3.4 Student Performance by Musical Instrument

The following code shows scatter plots of studentsâ€™ maths, reading, science and overall performance against the number of musical instruments owned, as well as showing the relationship by fitting a line through linear regression.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

plot_math <- ggplot(data=PV, aes(x=mi_num, y=Math_Score)) +
  geom_point(color="#3459e6") +
  geom_smooth(method=lm, size=0.5,color = "#FF5733") +
  labs(title ="Math Score by Musical instruments", x = "", y = "")+
    theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))


plot_reading <- ggplot(data=PV, aes(x=mi_num, y=Reading_Score)) +
  geom_point(color="#3459e6") +
  geom_smooth(method=lm, size=0.5,color = "#FF5733") +
  labs(title ="Reading Score by Musical instruments", x = "", y = "")+
    theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))


plot_science <- ggplot(data=PV, aes(x=mi_num, y=Science_Score)) +
  geom_point(color="#3459e6") +
  geom_smooth(method=lm, size=0.5,color = "#FF5733") +
  labs(title ="Science Score by Musical instruments", x = "", y = "")+
    theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))


plot_total <- ggplot(data=PV, aes(x=mi_num, y=Total_Score)) +
  geom_point(color="#3459e6") +
  geom_smooth(method=lm, size=0.5,color = "#FF5733") +
  labs(title ="Total Score by Musical instruments", x = "", y = "")+
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5))


combined_plot <- plot_math + plot_reading + plot_science + plot_total
combined_plot
```

### 3.4.1 Pros and Cons

**Clarity**

-   Lack of x and y axis labels

-   Axis limits are not aligned, making it difficult to make comparisons

-   Choice of scatter plot is not suitable for discrete vs continuous data. It does not clearly show the distribution of grades and number of students at each x-axis tick.

-   The geom_smooth line makes little sense due to the nature of how the scatter points look like. (we can't really tell that the line is going through the mean and giving an upward trend)

**Aesthetics**

-   Soft grid lines are not distracting

-   The colour choice is neat and simple

-   The repetition of "by Musical Instruments" in each chart's title is unnecessary, and can be mentioned in the plot title instead

### 3.4.2 Sketch

![](Sketch 4.png){fig-align="center"}

**Clarity**

-   Added x and y labels

-   Aligned all axis limits so that they are of the same scale

-   Changed the layout and replaced the scatter plot with a geom_bin_2d that shows Average Scores on the left that gives a summary of all 3 subjects. The bin map also indicates the total number of students with 1, 2, 3 or 4 instruments unlike the previous scatter plot.

-   Boxplots are used to show breakdown for individual subjects.

-   The geom_smooth line is removed as the trend can already be observed from the plots.

**Aesthetics**

-   Soft grid lines are removed as it is not needed.

-   The colour choice is reduced to a simple gray and red scale to avoid distractions.

-   Axis titles are collected to avoid repetitions.

-   Bold axis labels and titles.

### 3.4.3 Make-over

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| warning: false

p41 <- ggplot(data=na.omit(PV), 
              aes(x = as.factor(mi_num), 
                  y = Math_Score)) +
  geom_boxplot(fill = "lightgray") +
  ylim(200,800) +
  labs(title = element_blank(), 
       x = element_blank(),
       y = "Math") +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.y = element_text(face = "bold")
        )

p42 <- ggplot(data=na.omit(PV), 
              aes(x = as.factor(mi_num), 
                  y = Reading_Score)) +
  geom_boxplot(fill = "lightgray") +
  ylim(200,800) +
  labs(title = element_blank(), 
       x = element_blank(),
       y = "Reading") +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.y = element_text(face = "bold")
        )

p43 <- ggplot(data=na.omit(PV), 
              aes(x = as.factor(mi_num), 
                  y = Science_Score)) +
  geom_boxplot(fill = "lightgray") +
  ylim(200,800) +
  labs(title = element_blank(), 
       x = element_blank(),
       y = "Science") +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.y = element_text(face = "bold")
        )


p44 <- ggplot(data=na.omit(PV), 
              aes(x=as.factor(mi_num), 
                  y=Average_Score)) +
  ylim(200,800) + 
  geom_bin_2d(bins = 12) +
  scale_fill_continuous(low = "seashell", 
                        high = "red") +
  labs(title = element_blank(), 
       x = element_blank(), 
       y = "Average of three Subjects")+
  theme_minimal() +
  theme(text = element_text(size = 8),
        legend.position = "left",
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.y = element_text(face = "bold")
        )


p4 <- p44 + (p41 / p42 / p43 + plot_layout(axis_titles = "collect"))

p4 <- p4 + 
  plot_layout(axis_titles = "collect",
              widths = c(4,6)) + 
  plot_annotation(
    title = "Distribution of Students' Scores by Number of Musical Instruments\nin household",
  )

p4 <- p4 & theme(plot.margin = margin(5.5, 5.5, 0, 5.5))

wrap_elements(panel = p4) +
  labs(tag = "Number of Musical Intruments") +
  theme(
    plot.tag = element_text(size = rel(0.8), 
                            face = "bold"),
    plot.tag.position = "bottom"
  )
```

## 3.5 Student Performance by Own Room

The following code plots box-and-line graphs to compare student performance in maths, reading, science and overall scores by whether or not they had the room to themselves.

```{r}
#| code-fold: true
#| code-summary: "Show the code"

p1 <- ggplot(data = PV, aes(x =Math_Score , y = Own_Room)) +
        geom_boxplot(fill = "#3459e6") +
        labs(title ="Math Score by Private Space",x = "", y = "")+
        theme_minimal() +
        theme(text = element_text(size = 8),
              plot.title = element_text(hjust = 0.5))

p2 <- ggplot(data = PV, aes(x =Reading_Score , y = Own_Room)) +
        geom_boxplot( fill = "#3459e6") +
     
        labs(title ="Reading Score by Private Space", x = "", y = "")+
        theme_minimal() +
        theme(text = element_text(size = 8),
              plot.title = element_text(hjust = 0.5))
  
p3 <- ggplot(data = PV, aes(x = Science_Score , y = Own_Room)) +
        geom_boxplot( fill = "#3459e6") +
       
        labs(title ="Science Score by Private Space", x = "", y = "")+
        theme_minimal() +
        theme(text = element_text(size = 8),
              plot.title = element_text(hjust = 0.5))  

p4 <- ggplot(data = PV, aes(x = Total_Score , y = Own_Room)) +
        geom_boxplot( fill = "#3459e6") +
       
        labs(title ="Total Score by Private Space", x = "", y = "")+
        theme_minimal() +
        theme(text = element_text(size = 8),
              plot.title = element_text(hjust = 0.5))


combined_plot<- p1 + p2 + p3 + p4
combined_plot
```

### 3.5.1 Pros and Cons

**Clarity**

-   Lack of axis labels

-   Axes limits are not aligned and can be misleading, especially for the charts showing Math, Reading, and Science scores.

-   The plot layout of 2x2 is not ideal. I would use a layout where easy comparison can be made for Math, Reading, and Science.

-   On the same point, I would opt not to show Total Scores as it is on a different scale as compared to the other 3 plots. Rather, I would use Average Scores to give a summary of all 3 scores together.

-   Data for NA should not be shown as it does not add value to the analysis

**Aesthetics**

-   Soft grid lines are not distracting

-   "Score by Private Space" is repeated in all charts' titles. Instead, it can be mentioned only once in the plot title

-   The colour is same for all responses. I would use separate colours for yes and no responses.

### 3.5.2 Sketch

![](Sketch 5.png){fig-align="center"}

**Clarity**

-   Added x and y labels

-   Aligned all axis limits so that they are of the same scale

-   Changed the layout and replaced the Total Score boxplot with a Density plot which shows Average Scores on the left that gives a summary of all 3 subjects.

-   Boxplots are used to show breakdown for individual subjects.

-   NA responses are removed as it does not add to the analysis

**Aesthetics**

-   Soft grid lines are removed as it is not needed.

-   Fill colour by response is added

-   Axis are collected to avoid repetitions.

-   Bold axis labels and titles.

### 3.5.3 Make-over

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| warning: false

p51 <- ggplot(data = na.omit(PV), 
              aes(x = Own_Room, 
                  y = Math_Score,
                  fill = Own_Room)) +
  geom_boxplot(alpha = 0.3, 
               show.legend = FALSE) +
  ylim(200, 800) +
  labs(title ="Math",
       x = "", 
       y = "") +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face = "bold"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +
  scale_fill_manual(values = c("Yes" = "blue",
                               "No" = "red"))

p52 <- ggplot(data = na.omit(PV), 
              aes(x = Own_Room, 
                  y = Reading_Score,
                  fill = Own_Room)) +
  geom_boxplot(alpha = 0.3, 
               show.legend = FALSE) +
  ylim(200, 800) +
  labs(title ="Reading",
       x = "", 
       y = "") +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face = "bold"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +
  scale_fill_manual(values = c("Yes" = "blue",
                               "No" = "red"))

p53 <- ggplot(data = na.omit(PV), 
              aes(x = Own_Room, 
                  y = Science_Score,
                  fill = Own_Room)) +
  geom_boxplot(alpha = 0.3, 
               show.legend = FALSE) +
  ylim(200, 800) +
  labs(title ="Science",
       x = "", 
       y = "") +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face = "bold"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()) +
  scale_fill_manual(values = c("Yes" = "blue",
                               "No" = "red"))

p54 <- ggplot(data = na.omit(PV), 
              aes(y = Average_Score , 
                  fill = Own_Room)) + 
  geom_density(alpha = 0.3) +
  ylim(200, 800) +
  labs(title ="Average of three\nSubjects", 
       x = "",
       y = "Score") +
  theme_minimal() +
  theme(text = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face = "bold"),
        legend.position = "left",
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_text(face = "bold"),
        axis.text.y = element_blank()) +
  scale_x_reverse() +
  scale_fill_manual(values = c("Yes" = "blue",
                               "No" = "red")) + 
  guides(fill = guide_legend(title="Own Room"))


p5 <- p54 + (p51 + p52 + p53 + plot_layout(axes = "collect"))

p5 + plot_layout(widths = c(1,5)) + 
  plot_annotation(title = "Distribution of Students' Scores by Private Space")
```
