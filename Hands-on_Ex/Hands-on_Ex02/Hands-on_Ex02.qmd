---
title: "Hands-on_Ex02"
date: "January 22, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
editor: visual
---

# 2. Beyond ggplot2 fundamentals

## 2.1 Overview

In this chapter, we will be trying out several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, we will be able to:

-   control the placement of annotation on a graph by using functions provided in ggrepel package,
-   create professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,
-   plot composite figure by combining ggplot2 graphs by using patchwork package.

## 2.2 Getting started

### 2.2.1 Loading libraries

We use p_load() function from the pacman library to load the required packages

```{r}
pacman::p_load(ggrepel, 
               patchwork, 
               ggthemes, 
               hrbrthemes,
               tidyverse) 
```

### 2.2.2 Data

We will be using a data file called Exam_data. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## 2.3 Beyond ggplot2 Annotation: ggrepel

Ggrepel is able to hide the overlaps pretty well to prevent clutter

```{r}
#| code-fold: true
#| code-summary: "Show the code"

g231 <- ggplot(data=exam_data, 
             aes(x= MATHS,
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              linewidth=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("With ggrepel")

g232 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("Without ggrepel")

p23 <- g231 + g232

p23 + plot_annotation(title = "English scores versus Maths scores for Primary 3")
```

## 2.4 Beyond ggplot2 themes

Trying out various themes from base

```{r}
#| code-fold: true
#| code-summary: "Show the code"

g241 <- ggplot(data=exam_data, 
               aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("theme_gray") 

g242 <- ggplot(data=exam_data, 
               aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_void() +
  ggtitle("theme_void") 

g243 <- ggplot(data=exam_data, 
               aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_classic() +
  ggtitle("theme_classic") 

g244 <- ggplot(data=exam_data, 
               aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_minimal() +
  ggtitle("theme_minimal") 

p241 <- (g241 + g242) / (g243 + g244)

p241 + plot_annotation(title = "Distribution of Maths score")

```

### 2.4.1 ggthemes

Trying out themes from ggthemes

```{r}
#| code-fold: true
#| code-summary: "Show the code"

g245 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("theme_economist") +
  theme_economist()

g246 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("theme_fivethirtyeight") +
  theme_fivethirtyeight()

g247 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("theme_hc") +
  theme_hc()

g248 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("theme_stata") +
  theme_stata()

p242 <- (g245 + g246) / (g247 + g248)

p242 + plot_annotation(title = "Distribution of Maths score")
```

### 2.4.2 hrbthems

Trying out themes from the hrbthems package

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| warning: false

g249 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("theme_ft_rc") +
  theme_ft_rc()

g2410 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("theme_ipsum") +
  theme_ipsum()

g2411 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("theme_modern_rc") +
  theme_modern_rc()

g2412 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("theme_tinyhand") +
  theme_tinyhand()

p243 <- (g249 + g2410) / (g2411 + g2412)

p243 + plot_annotation(title = "Distribution of Maths score")
```
## 2.5 Beyond Single Graph

Using patchwork to combine multiple charts together to tell a complete story

First, let's create 3 different graphs

```{r}
#| code-fold: true
#| code-summary: "Show the code"

p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")

p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")

p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

Now, lets try to patch them together in various arrangements

```{r}
#| code-fold: true
#| code-summary: "Show the code"

(p1 + p2) / p3

```
With inset elements
```{r}
#| code-fold: true
#| code-summary: "Show the code"

p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```











